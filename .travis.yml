# Based on: http://conda.pydata.org/docs/travis.html

sudo: false

language: python

# We don't actually use the Travis Python, but this keeps it organized.
python:
  - "2.7"
  - "3.4"

os:
  - linux
  # Travis-CI does not currently support Python and Mac OS X
  # - osx

install:

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        curl https://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -o miniconda.sh;
      else
        curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi
    else
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    fi

  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  # Useful for debugging any issues with conda
  - conda info -a

  # create and activate a test-environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

  # Install dependencies
  - "conda config --add channels hydroffice"
  - "conda config --add channels SciTools"
  - "conda config --add channels IOOS"
  - "conda install -q numpy matplotlib h5py lxml pytest"

  - python setup.py install

script:
  - "py.test"

after_script:
  # freezing stuff
  - "conda install -q pydap wxpython"
  - pip install hdf_compass
  - pip install pyinstaller

  # If tests are successful, create a source distribution.
  - "python setup.py sdist"
  # Freeze the application using PyInstaller
  - "pyinstaller HDFCompass.1file.spec"

addons:
  artifacts: true
  s3_region: "us-west-1" # defaults to "us-east-1"
